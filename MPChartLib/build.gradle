apply plugin: 'com.android.library'
apply plugin: 'ivy-publish'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.philjay'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 3
        versionName '3.1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true // this prevents "not mocked" error
    }
}

afterEvaluate {
    publishing {
        repositories {
            ivy {
                url = System.getenv("OSMAND_BINARIES_IVY_ROOT") ?: "./"
            }
        }
        publications {
            release(IvyPublication) {
                // Applies the component for the release build variant.
                from components.release
                organisation = 'net.osmand'
                module = 'MPAndroidChart'
                revision = 'master-snapshot'
            }
            debug(IvyPublication) {
                // Applies the component for the release build variant.
                from components.debug
                organisation = 'net.osmand'
                module = 'MPAndroidChart'
                revision = 'master-snapshot'
            }
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.0'
    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    options.charSet = 'UTF-8'
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}